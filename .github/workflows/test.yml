name: Check example code

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  correctness:
    name: OI-wiki Example Code Correctness Check
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
      files_to_test: ${{ steps.GetFiles.outputs.files_to_test }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed code files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            docs/**/*.cpp
            docs/**/*.in
            docs/**/*.ans
      - uses: actions/setup-python@v5
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          python-version: '3.10'
          cache: pipenv
      - name: Install Python dependencies
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python3
          pipenv install
      - name: Install C++
        if: steps.changed-files.outputs.any_changed == 'true'
        run: sudo apt-get install -y g++
      - name: Make the File list
        if: steps.changed-files.outputs.any_changed == 'true'
        run: echo "${{ steps.changed-files.outputs.all_changed_files }}" > res.txt
      - name: Get Files to Test
        if: steps.changed-files.outputs.any_changed == 'true'
        id: GetFiles
        run: pipenv run python scripts/get_files_to_test.py
      - name: Correctness Check
        if: steps.changed-files.outputs.any_changed == 'true'
        env: 
          FILES_TO_TEST: ${{ steps.GetFiles.outputs.files_to_test }}
        run: pipenv run python scripts/correctness_check.py

  undefinedbehaviors-ubuntu:
    name: UB Test - Ubuntu
    needs: correctness
    if: ${{ needs.correctness.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install GCC, G++
        run: |
          echo "::group::Install GCC, G++"
          sudo apt-get install -y gcc-10 g++-10 gcc-9 g++-9
          echo "::endgroup::"
          echo "::group::Check G++-10 Version"
          g++-10 --version
          echo "::endgroup::"
          echo "::group::Check G++-9 Version"
          g++-9 --version
          echo "::endgroup::"
      - name: Undefined Behaviors Check
        env: 
          FILES_TO_TEST: ${{ needs.correctness.outputs.files_to_test }}
          RUNS_ON: ubuntu-latest
        run: python3 scripts/ub_check_ubuntu.py

  undefinedbehaviors-macos:
    name: UB Test - MacOS
    needs: correctness
    if: ${{ needs.correctness.outputs.any_changed == 'true' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install C++
        run: |
          echo "::group::Check G++ Version"
          g++-14 --version
          echo "::endgroup::"
          echo "::group::Check Clang Version"
          clang --version
          echo "::endgroup::"
      - name: Undefined Behaviors Check
        env: 
          FILES_TO_TEST: ${{ needs.correctness.outputs.files_to_test }}
          RUNS_ON: macos-latest
        run: python3 scripts/ub_check_macos.py

  undefinedbehaviors-rv:
    name: UB Test - RISC-V
    needs: correctness
    if: ${{ needs.correctness.outputs.any_changed == 'true' }}
    # runs-on: riscv-builders
    # steps:
    #   - uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0
    #   - name: Install Clang
    #     if: needs.correctness.outputs.any_changed == 'true'
    #     run: |
    #       echo "::group::Install Clang"
    #       apt install -y clang
    #       echo "::endgroup::"
    #       echo "::group::Check G++ Version"
    #       g++ --version
    #       echo "::endgroup::"
    #       echo "::group::Check Clang Version"
    #       clang --version
    #       echo "::endgroup::"
    #   - name: Undefined Behaviors Check
    #     env: 
    #       FILES_TO_TEST: ${{ needs.correctness.outputs.files_to_test }}
    #       RUNS_ON: riscv-builders
    #     run: python3 scripts/ub_check_riscv.py
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache RISC-V Ubuntu Image
        id: cache-image
        uses: actions/cache@v4
        with:
          path: ubuntu-24.04-preinstalled-server-riscv64.img
          key: riscv-image
      - name: Install QEMU
        run: |
          sudo apt install qemu-system qemu-utils
      - name: Download and Prepare RISC-V Ubuntu Image
        if: steps.cache-image.outputs.cache-hit != 'true'
        run: |
          curl https://cdimage.ubuntu.com/releases/24.04/release/ubuntu-24.04-preinstalled-server-riscv64.img.xz -o ubuntu-24.04-preinstalled-server-riscv64.img.xz
          xz -dk ubuntu-24.04-preinstalled-server-riscv64.img.xz
          qemu-img resize -f raw ubuntu-24.04-preinstalled-server-riscv64.img +1G


  undefinedbehaviors-windows:
    name: UB Test - Windows
    needs: correctness
    if: ${{ needs.correctness.outputs.any_changed == 'true' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Clang, GCC, G++
        shell: cmd
        run: |
          echo ::group::Install Clang, MinGW
          choco install -y llvm mingw
          echo ::endgroup::
          echo ::group::Check Clang Version
          clang --version
          echo ::endgroup::
          echo ::group::Check G++ Version
          g++ --version
          echo ::endgroup::
          echo ::group::Check MSVC Version
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cl.exe
          echo ::endgroup::
      - name: Undefined Behaviors Check
        env: 
          FILES_TO_TEST: ${{ needs.correctness.outputs.files_to_test }}
          RUNS_ON: windows-latest
        run: python scripts/ub_check_windows.py

  undefinedbehaviors-alpine:
    name: UB Test - Alpine
    needs: correctness
    if: ${{ needs.correctness.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Clang
        if: needs.correctness.outputs.any_changed == 'true'
        run: |
          echo "::group::Install Python, GCC, Clang"
          apk add build-base python3 llvm clang
          echo "::endgroup::"
          echo "::group::Check G++ Version"
          g++ --version
          echo "::endgroup::"
          echo "::group::Check Clang Version"
          clang --version
          echo "::endgroup::"
      - name: Undefined Behaviors Check
        env: 
          FILES_TO_TEST: ${{ needs.correctness.outputs.files_to_test }}
          RUNS_ON: alpine-latest
        run: python3 scripts/ub_check_alpine.py